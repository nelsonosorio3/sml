Syntax:
	if e1 then e2 else e3
	where if, the, and else are keywords and
	e1, e2, and e3 are subexpressions

Type-checking:
	first e1 must have type bool
	e2 and e3 can have any type (call it t), but they
	must have the same type t
	the type of the entire expression is also t

Evaluation rules:
	first evaluate e1 to a value call it v1
	if it's true, evaluate e2 and that result is the whole expression's result
	else, evaluate e3 and that result is the whole expression

Syntax:
	e1 < e2
	where < is a keyword and e1 and e2 are expressions

Type-checking:
	e1 and e2 must have type int
	the type of the entire expression is bool

Evaluation rules:
	first evaluate e1 to a value call it v1
	then evaluate e2 to a value call it v2
	if v1 is strictly less than v2 the expressions result is
	true if not the expression result is false